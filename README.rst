Description
===========

The script ``sphinx-autodoc.py`` is similar to ``sphinx-apidoc`` and
``sphinx-autogen`` provided with Sphinx. It is a tool to automatically create
``.rst`` source files, from which Sphinx can create API documentation.

It does this by walking thru a Python package and generating rst files for:

* Full API doc. Each module will be treated by the `autosummary` extension
  ``sphinx.ext.autosummary``. Files are written to ``source/generated/api`` by
  default. Module doc strings (if present) are also included.
* Detect and include hand written docs, by default in ``source/written/``.

Using it is a 2-step process. First, run Sphinx' own ``sphinx-quickstart`` to
set up a Sphinx project (unless you already have one). Then use
``sphinx-autodoc.py`` to generate all rst files.

Usage
=====

Set up doc dir using ``sphinx-quickstart``
------------------------------------------

Create a sphinx doc dir for your project (lets assume ``myproject/doc`` with
the source dir ``myproject/doc/source`` and the main index file
``myproject/doc/source/index.rst``).

.. code:: sh

    $ cd myproject/doc
    $ sphinx-quickstart

Choose a separate source and build dir (e.g. ``doc/source`` and ``doc/build``).
Accept most other defaults. Especially, say yes to the "autodoc" extension.

Inspect ``doc/source/conf.py`` and make sure you have at least these extensions
enabled.

.. code:: python

    # Maybe needed with older sphinx versions
    ##sys.path.insert(0, os.path.abspath('sphinxext'))

    extensions = ['sphinx.ext.autodoc',
                  'sphinx.ext.viewcode',
                  'sphinx.ext.autosummary']

Modify ``doc/source/conf.py`` to include these configs.

.. code:: python

    autosummary_generate = True

    autodoc_default_flags = ['members', 'show-inheritance', 'special-members']
    html_static_path = ['_static']          # may already be there
    html_domain_indices = ['py-modindex']   # ignore np-modindex

    # probably default
    ##modindex_common_prefix = ['myproject.']


You may play with ``autodoc_default_flags``, but the important part is
``autosummary_generate``.


Use sphinx-autodoc.py
---------------------

Now walk thru the package and create rst files. We use ``-i`` to create
an initial ``source/index.rst``.

.. code:: sh

    $ sphinx-autodoc.py -i -s doc/source myproject

Note that this will overwrite an existing ``index.rst`` file (a backup is made
however).

You can run the script from anywhere, provided that ``myproject`` is a Python
package since we need to import it to inspect all its subpackages and modules.
The source path ``-s`` must point to the dir where you want all rst files to
be generated, which will usually be ``doc/source/``.

Now modify ``source/index.rst`` to suit you needs and then run ``make html``
using the Makefile generated by ``sphinx-quickstart`` earlier. Inspect the
rendered docs.

.. code:: sh

    $ firefox -new-window build/html/index.html &


Notes for numpydoc
==================

If you want to use numpydoc and the `numpy doc string format
<https://numpydoc.readthedocs.io/en/latest/format.html>`_, then do this:

Install numpydoc (Debian-ish systems).

.. code:: sh

    $ apt install python3-numpydoc

or

.. code:: sh

    $ pip install numpydoc

Modify ``doc/source/conf.py`` to include numpydoc in the extensions list and
set some configs.

.. code:: python

    extensions = ['sphinx.ext.autodoc',
                  'sphinx.ext.viewcode',
                  'sphinx.ext.autosummary',
                  'numpydoc']

    numpydoc_show_class_members = True
    numpydoc_class_members_toctree = True

    # for class.rst
    templates_path = ['_templates']

Next, grab a recent copy of numpy and copy the ``class.rst`` file.

.. code:: sh

    $ git clone https://github.com/numpy/numpy.git
    $ mkdir -p doc/source/_templates/autosummary
    $ cp numpy/doc/source/_templates/autosummary/class.rst doc/source/_templates/autosummary/
